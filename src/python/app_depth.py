#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import sys
import zmq
import time
# minnow comms
from minnow_comms.minnow_app_multiprocess import App
# flatbuffer serialization
import flatbuffers
# generated by flatc
import topics.nav.depth
# depth driver MS5837
from minnow_drivers.pyMS5837 import pyMS5837

class Depth(App):
    def __init__(self):
        super().__init__()
        self.setup_subscribers()
        # setup flatbuffers
        self.fb_builder = flatbuffers.Builder(1024)
        # setup depth sensor
        self.ms5837 = pyMS5837.MS5837(2, model=pyMS5837.MODEL_30BA, fluid_density=pyMS5837.DENSITY_FRESHWATER, oversampling=pyMS5837.OSR_8192)

    def setup_subscribers(self):
        pass    # no subscriptions for this app

    def process(self):
        self.ms5837.read()

        topics.nav.depth.depthStart(self.fb_builder)
        topics.nav.depth.depthAddTime(self.fb_builder, time.time())
        topics.nav.depth.depthAddTemperature(self.fb_builder, self.ms5837.get_temperature(pyMS5837.UNITS_Celsius))
        topics.nav.depth.depthAddPressure(self.fb_builder, self.ms5837.get_pressure(pyMS5837.UNITS_mbar))
        self.ms5837.fluid_density = pyMS5837.DENSITY_FRESHWATER
        freshwater_depth = self.ms5837.get_depth()
        self.ms5837.fluid_density = pyMS5837.DENSITY_SALTWATER
        saltwater_depth = self.ms5837.get_depth()
        topics.nav.depth.depthAddDepthFresh(self.fb_builder, freshwater_depth)
        topics.nav.depth.depthAddDepthSalt(self.fb_builder, saltwater_depth)

        print('Temperature: {:6.2f} C'.format(self.ms5837.get_temperature(pyMS5837.UNITS_Celsius)))
        print('Pressure: {:6.2f} mbar'.format(self.ms5837.get_pressure(pyMS5837.UNITS_mbar)))
        print('Depth (freshwater): {:6.2f} m'.format(freshwater_depth))
        print('Depth (saltwater): {:6.2f} m'.format(saltwater_depth))
        print('')

        depth_msg = topics.nav.depth.depthEnd(self.fb_builder)
        self.fb_builder.Finish(depth_msg)
        bin_depth_msg = self.fb_builder.Output()
        self.publish(b'nav.depth' + b' ' + bin_depth_msg)

        time.sleep(0.01)

if __name__ == "__main__":
    app = Depth()
    app.run()

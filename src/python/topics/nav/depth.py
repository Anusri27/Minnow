# automatically generated by the FlatBuffers compiler, do not modify

# namespace: nav

import flatbuffers

class depth(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsdepth(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = depth()
        x.Init(buf, n + offset)
        return x

    # depth
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # depth
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # depth
    def Temperature(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # depth
    def Pressure(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # depth
    def DepthFresh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # depth
    def DepthSalt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def depthStart(builder): builder.StartObject(5)
def depthAddTime(builder, time): builder.PrependFloat64Slot(0, time, 0.0)
def depthAddTemperature(builder, temperature): builder.PrependFloat64Slot(1, temperature, 0.0)
def depthAddPressure(builder, pressure): builder.PrependFloat64Slot(2, pressure, 0.0)
def depthAddDepthFresh(builder, depthFresh): builder.PrependFloat64Slot(3, depthFresh, 0.0)
def depthAddDepthSalt(builder, depthSalt): builder.PrependFloat64Slot(4, depthSalt, 0.0)
def depthEnd(builder): return builder.EndObject()
